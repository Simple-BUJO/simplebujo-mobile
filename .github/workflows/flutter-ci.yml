name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    container:
      image:  google/dart:latest

    steps:
    - uses: actions/checkout@v2

    - name: Print Dart SDK version
      run: dart --version

    - name: Install dependencies
      run: dart pub get
        -
    # Setup the flutter environment.
    - uses: actions/flutter-action@v1
      with:
        channel: 'stable' # 'beta', 'dev', 'alpha', default to: 'stable'

    # Get flutter dependencies.
    - run: flutter pub get

    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .

    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .

    # Run widget tests for our flutter project.
    - run: flutter test

    # Build apk.
    # - run: flutter build apk

    # Upload generated apk to the artifacts.
    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release-apk
    #     path: build/app/outputs/apk/release/app-release.apk